<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxChapau.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIgAAABQCAYAAADC1z0QAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wQAADsEBuJFr7QAADN5JREFUeF7tnPNzLF8Txq9t27Zt26zrurZt27Zt27Zt/hv9rc+pOqlNMplk8+7e
        Te7bPzyV7MwZ7PRzup/u07Mxfv/+LQpFWFCCKFyhBFG4QgmicIUSROEKJYjCFUoQhSuUIApXKEEUrlCC
        KFyhBFG4QgmicIUSROEKJYjCFUoQhSuUIApXKEEUrojyBPn165f8/PnTgP///PnjOO7169dy4MAB2b9/
        v3z48MFxjMJ7RCmCfP78Wa5evSpLly6V3r17S61atSRfvnySKVMmyZAhg2TPnl1KlCghzZo1kyFDhsi8
        efNk69atsnnzZmnTpo0kTZpUateuLWfPnnU8v8J7RAmCfPnyRY4cOSKtWrWSNGnSSMyYMYMQI0aMMOE5
        DkCg+fPnO15DETkEnCA3b96Ubt26SfLkyR0N70mIsGDHxo0bV8qVKydbtmyRr1+/Ol5P4R0CRhD0xJkz
        Z6Ru3boSK1asCJMhIkiZMqX069dPnj175nhtRcQRMILcv39fevToIbFjx/YpOSzix48v9erVk9OnTxsy
        Ot2DInwEhCBkJNu3bzcC1Mm4vgKeqWTJkkbIck2ne1G4IyAEef/+vUyaNEnixInjaFhfAc/ENSAi4vXj
        x4+O96MIGwEhyNOnT2XgwIF+CS1hIW/evLJy5UrH+1GEjYAQ5Pnz5zJ48GBHQ/oLkLF06dKyd+9ex3tS
        OCMgBKHSOXXqVEmQIIExnPUknv9HBN6MZxxpcPv27eXFixeO96UIjYAQBFy/fl369u1r6hZUTFu3bi3d
        u3eXESNGyIQJE2T8+PEydOhQ6dy5s8lGChUqJKlSpTKawpLCGzJZ5MyZUxYtWqSZTQQRMIJ4Cwpf9+7d
        M0UwiAVhSGWdSOAGvEinTp2MUHa6jiI4og1BQgIDU57v2rWrpE6dOijchOdV2F+5cmU5fvy443kVwREl
        CIK7Zz3myZMnJvTw161uwXgbIhh3+/ZtGTRokKRPnz5CVdmCBQvKunXrQp1XERoBJwgG3rdvnzRv3tyk
        vsOGDZMKFSrI4sWLg5GAimifPn2MTiFEkAVBJM/zHDt2TOrUqSPx4sUL05uwjZR3xYoVQccqwkZACYKu
        WLVqlRQoUEAGDBhg3D6ClVXZuXPnmjFkPAsXLpSyZcuazGfnzp1SuHBhqVKlipw6dSrUOclQJk6cGLQq
        7EQQ0t09e/aEOlYRGgElCIRADyA4165dK2vWrDFholixYqYUj1fYsWOHIVD9+vWNFyGzwciNGzeWhw8f
        Op4XfbJgwQLJmjVrKJLwuUWLFqZY53SsIjgCRhA8w4wZMyRJkiQmjb1x44YsWbLErMTS9IMWgQC9evWS
        ZMmSGY1Ba0DHjh0lceLExuNAIKdzA84/Z84cSZs2bTCSZMuWzTQaOR2jCI2AEcSW20k727VrJ+/evZND
        hw5JtWrVzFL9jx8/jMcg5OAJCDmvXr0yGiVXrlyGTE7n9QTnnDJliuk0gxxkOxz/9u1bx/GK0AgYQejV
        QGhS+KKFEMLcunXLbIM4aA06zGgkypEjR1Cn2MaNG41IvXTpkqmLnDt3ztWToEkgCcJ35syZWv/wEgEj
        yPfv343myJgxo9EdGB1xiac4ceKEKYjt3r3bVFgTJkxoSuT0mhIeCDN4HbIaJ6HqBK2cRg4BFal0olP2
        JiNBOG7bts3UQ+x+mphZgaU8TigqUqSI+fzt27dg51H4DwElSESB4CQEQRin/Qr/we8EwbUTToDTfkXU
        hl8JgkAklS1fvrzJHh4/fhxqDJnGhQsX5PLly/Lp06dQ+xWBhd8IgpYg86hYsaLJSELut+Shakqdgt4Q
        UloW4OxaC+Q5f/68eVuOGoibFyItRpuoGPUt/EYQUlBWWqmAPnjwINg+FtfoaE+UKFFQAcuCtRSyleXL
        l0vRokXNkj6d79QyyFwgij0PhGAsb+FRbeXtO/pPqbZ6rtMoIg+/EYSQ0bRpU5N50FXONmY54YSMJaxV
        V6qmvGoJMRhjxwGIQpX14sWLpthFXYNKKbUSaiZ4Gkr0jKEC6+RxqJlQC3n58qWK3gjAbwS5c+eOqW3g
        JaiOTps2Tfr37y+5c+cOIoYTQTxhiWHBNsrskIGCGsQANBC9efPGXJcFQGolDRo0CFYjoQ+WlJrtvN9b
        s2ZNXfKPAPxGEGY4rYMsvXt6AWvoyILjOSeahdoIhTTPhTe0D2swlSpVMgt9bKNqO2rUKEmRIoUp048c
        OdKQiJVke5zCGX4jCEBwskwfMpxEhCRuYzgf4QYShOwMo1zfoUMH47V4tROdgqeAGIQjel05Zvr06SZU
        eR4bHYHHJGT6q3joV4IQ7ymXs5yPwcMjBh6BZh7EaXhj2U+rwNGjR4O0BmKYVV7CTtu2bY0Xu3btmglJ
        kApNxNoNoYaSfnSrzaCZePnL1pZ4hYNQSWN3yETAV/ArQQDC9OTJk6Z/wylrAYQLSMHbdizxb9q0SbJk
        yeI41sISjuymePHixmNwDERgcY8mIx7o7NmzTUtBnjx5TOihVI+4jWo1FwxOeGRS8czQcLRAsA9BTX8L
        C45jx441Y3i3GWLwDFibYqU75Dl9Ab8TxILZTJYxbtw46dKli1nB5YuNGTPG1EmsyASs0UAWNIMlghNJ
        QoJxeA/aBTgfK75NmjQxK8aNGjUyQpmfmmBRkMIdPzzjlMngtpmpGMpus7UZz3FOcBqDQbkfjMp38xwD
        KXbt2mXuC6/Hax/cG96ROhFj8BSlSpUyvSwQn21kiTxDQi1pPvdsz+lL/DWCeAsKaegF27HuRIiQwJuQ
        Od29e9fEZB4mJGM7XgUvwkNmG54G0lCv4XoYjXBEdkQDEz2yiGwyIf5iLE8yYWxmNa0EpNbsJ4QhgD1r
        NYzDi/ELSGXKlDF1nsOHD5t9kAbSUkxENNvfSuHe8ufPb1a7Gbds2TJJly6d8bKQmm3oqOrVq5tyAHWf
        iJA3MoiyBAGEATQMcZYHAVF4eCG9Ch4CnUMTkTUiMZliHOOoraBDEK0HDx40pX9aCDAGRmL2rV692qTg
        7OO3zsh86GJDF9GwRHiyRsC7QBq7j5e/aFvgM/eJh4TgEJXZTU2GTAuvSGsDpOC7UWkmLCKqScNZlMSD
        cM8YH3JyTXpx+d4QCeHPPeB1ac1kAk2ePNls43qQ3JdkidIEseDB0flOTwhFNB4grhXjsI1+VgzieQxE
        YMbiPTASIQ7glTCiZ2e7/SkK+xNWhAQMSn3FGgty2XPTr8I29mEkZjV6AUNDWAp1dNhDCAqFdOizv2fP
        ngboLIxvu+VsCyTXhEycF2+EDiEEoTvYVqNGDdNlx/1xDJ6QkErYZkLgzRDg7Lf3+r8iWhDEAu/ATEZ0
        MqOqVq0aNMvsGHQDpXx0COTwfKsfb4TBEMW4fNw/va/8z+wnpmMUxmJg+lTwNGRGVo9wDJ4Jr4Vx+DE9
        PAoewRoSj4cQ5ngENKGIVJuKMuMQpPZ7IDxpteTcrDtRyOMcEB9xStrOEgPbrFe5cuWK+X6ETbbjvejU
        Hz16tJkEnMtXiFYEAYg8YjpaAqMSqzEgBtiwYYMpiCF+efA8PNw/3oSFPwQxhiWUEI4wOnGeWcxsRD8w
        +yAimgIDeva/8vD5Hy0AcdA0rBlBUO4LsuDZKN5xPAbEK+FJPH8Oi3UivBokh0ToCTQT5+JeuO+WLVsa
        kkI67pf7zpw5s9nO92Us3pD7xqviRSCUvYavEO0IAjAiMxnxhksmUwE8OLrSEHvMJh40v4GGl2ANyM5O
        PA8xnFoI2oXKLEU0DMm5yRoo8LEdoiEqefiEHwjIkgEGQ6/Y2U/sx3gYEe+BpoHEvJ8DMW2WAZEIBcx6
        zoEmgSx4FO6HsXT2UxKAXMOHDzdpP9fi3vFIfIbcFMjIZvh+hCLPZ+QrREuChAdcPuGEh0u5ndlpQwkP
        Gc9D6EEsYkjCDsbCW6Af8CSzZs0yHgAjIzoxIuMxCJ8ZDyGI/RgfTQA5yKLQGJAKUcn1MDh1IIxPdgSR
        ybDwfuzH69hVbIQmq+C0WXI9vgshiQlB2k69w5ciNDz8kwRxAp6Bh08YgjQYlgfPjCZLYCaTUeCqEbxU
        XGlVgAjUINavX2/0AwKVohyGJdTYqiwzm9Bm02bGEgbs4iQkwFuhR7gmpCJbQksQjrg3a3i8AcT4m0QI
        C/83BAkPGMPTIPz/6NEjIxw9hR9EgUhkPaS6aBJCE9Viz8KaBWEA4YvugJAh90d1KEG8AARAXxCiCB+s
        AzmN+5egBPECNvug1oEotuHkX4YSxAsQbho2bGj0BAUvXxakoiqUIF6A1BhhSoZBWuo05l+DEsQLkC5T
        RIsK2cXfghJE4QoliMIVShCFK5QgClcoQRSuUIIoXKEEUbhCCaJwhRJE4QoliMIVShCFK5QgClcoQRSu
        UIIoXPBb/gOHGcGIIHA18QAAAABJRU5ErkJggg==
</value>
  </data>
</root>